var jsdom = require('jsdom');
var q = require('q');

var qfs = require('./qfs');

var fetchCharts = function(lang, period){

    var fetchDate = new Date()
    var metaSeperator = 'â€¢';

    var parseRepo = function($repo, position){

        var repo = {
            url: undefined,
            stars: undefined,
            position: (position + 1),
            lang: lang,
            period: period,
            date: fetchDate.toISOString()
        };

        var $url = $repo.find('h3.repo-list-name a');
        if(1 === $url.length){
            repo.url = $url.attr('href').trim();
        }

        var $meta = $repo.find('.repo-list-meta');

        if(1 === $meta.length){
            var meta = $meta.text().trim().split(metaSeperator);

            if(2 <  meta.length){
                var stars = parseInt(meta[1].trim(), 10);
                repo.stars = stars;
            }
        }

        return repo;
    };

    var parseRepos = function(window){

        var deferred = q.defer();

        var $ = window.$;

        var $repos = $('ol.repo-list li.repo-list-item');

        var repos = [];

        $repos.each(function(index){
            repos.push(
                parseRepo($(this), index)
            );
        });

        deferred.resolve(repos);

        return deferred.promise;
        
    };

    var fetch = function(){
        var deferred = q.defer();

        var url = 'https://github.com/trending/' + lang + '?since=' + period;
        console.log('fetch ' + url);

        jsdom.env(
            url,
            ['http://code.jquery.com/jquery.js'],
            function (err, window) {
                console.log(err)
                if(err){
                    deferred.reject(err);
                }
                deferred.resolve(window);
            }
        );

        return deferred.promise;
    };

    var dir = function(dirname){

        var deferred = q.defer();

        qfs.fileExists(dirname)
        .then(function(){
            deferred.resolve();
        })
        .fail(function(){
            qfs.mkdir(dirname)
            .then(function(){
                deferred.resolve();      
            });
        })

        return deferred.promise;        

    };

    var saveRepos = function(repos){

        var deferred = q.defer();

        var dirname = './json/' + lang + '-' + period;

        var filename = fetchDate.getFullYear() + '-' + ( fetchDate.getMonth() + 1) + '-' + fetchDate.getDate() + '.json';

        dir(dirname)
        .then(function(){
            return qfs.writeFile(dirname + '/' + filename, JSON.stringify(repos, null, 4));
        })
        .then(function(){
            deferred.resolve();      
        });

        return deferred.promise;    
    };

    var deferred = q.defer();
    
    fetch()
    .then(parseRepos)
    .then(saveRepos)
    .then(function(){
        deferred.resolve();
    });

    return deferred.promise;    
};

//fetchCharts('javascript', 'daily');

module.exports = fetchCharts;